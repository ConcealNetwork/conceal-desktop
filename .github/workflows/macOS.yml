name: macOS

on:
  push:
    tags:
      - "*"

jobs:
  build-macos:
    name: macOS
    runs-on: macos-13
    steps:
      - uses: actions/checkout@master

      - name: Install dependencies
        run: |
          brew install boost@1.85 qt@5

      - name: Clone conceal-core
        run: |
          rm -rf cryptonote
          git clone https://github.com/ConcealNetwork/conceal-core.git cryptonote

      - name: Build
        id: build
        run: |
          export PATH="/usr/local/opt/qt@5/bin:$PATH"
          build_folder="build/release"
          ccx_version=$(echo ${{ github.ref }} | sed 's|refs/tags/||')
          release_name="ccx-desktop-macOS-v$ccx_version"
          app_name="conceal-desktop.app"

          lrelease src/languages/*.ts
          mkdir -p "$build_folder"
          cd "$build_folder"
          cmake ../.. -DCMAKE_BUILD_TYPE=Release -DBOOST_ROOT=/usr/local/opt/boost@1.85
          make -j3 
          macdeployqt "$app_name"
          cpack
          mkdir "$release_name"
          mv *.dmg "$release_name".dmg
          zip "$release_name".zip "$release_name".dmg
          sha256=$(shasum -a 256 "$release_name".zip | awk '{ print toupper($1) }')

          echo "sha256=${sha256}" >> $GITHUB_OUTPUT
          echo "release_name=${release_name}.zip" >> $GITHUB_OUTPUT
          echo "asset_path=${build_folder}/${release_name}.zip" >> $GITHUB_OUTPUT
          echo "ccx_version=${ccx_version}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.4
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Conceal Desktop v${{ steps.build.outputs.ccx_version }}
          body: |
            [Download for macOS](../../releases/download/${{ steps.build.outputs.ccx_version }}/${{ steps.build.outputs.release_name }}) **${{ steps.build.outputs.release_name }}**
            `SHA256 : ${{ steps.build.outputs.sha256 }}`
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
