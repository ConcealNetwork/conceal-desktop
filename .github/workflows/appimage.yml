name: AppImage

on:
  push:
    tags:
      - "*"

jobs:
  build-appimage:
    name: AppImage
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qtbase5-dev qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost-all-dev openssl

      - name: Clone conceal-core
        run: |
          rm -rf cryptonote
          git clone https://github.com/ConcealNetwork/conceal-core.git cryptonote

      - name: Build
        id: build
        run: |
          ccx_version=$(echo "$GITHUB_REF" | sed 's|refs/tags/||')
          release_name=Conceal_Desktop-v"$ccx_version"-x86_64.AppImage

          lrelease src/languages/*.ts
          make -j2 build-release

          echo "ccx_version=${ccx_version}" >> $GITHUB_OUTPUT
          echo "release_name=${release_name}"  >> $GITHUB_OUTPUT

      - name: Create AppImage
        id: appimage
        run: |
          ccx_version="${{steps.build.outputs.ccx_version}}"
          release_name="${{steps.build.outputs.release_name}}"

          cd appimage
          ./create-appimage.sh
          mv Conceal_Desktop*.AppImage ../$release_name
          cd ..
          ls -l $release_name
          sha256=$(shasum -a 256 "$release_name" | awk '{print toupper($1)}')

          echo "sha256=${sha256}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.4
        with:
          files: ${{ steps.build.outputs.release_name }}
          name: Conceal Desktop v${{ steps.build.outputs.ccx_version }}
          body: |
            [Download AppImage](../../releases/download/${{ steps.build.outputs.ccx_version }}/${{ steps.build.outputs.release_name }}) **${{ steps.build.outputs.release_name }}**
            `SHA256 : ${{ steps.appimage.outputs.sha256 }}`
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
